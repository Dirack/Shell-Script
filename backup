#!/bin/bash
# 
# backup (Shell Script) 
# 
# Objetivo: Fazer backup de um arquivo ou de uma lista
# de arquivos em um arquivo zipado na pasta atual.
# 
# Site: http://www.dirackslouge.online
# 
# Versão 1.1
# 
# Programador: Rodolfo A. C. Neves (Dirack)	 27/12/2018
# 
# email: rodolfo_profissional@hotmail.com
# 
# Licença: Software de uso livre e código aberto.

# Biblioteca de funções para formatar a mensagem de ajuda
source mensagemAjuda.sh 

# Biblioteca de funções para formatar a mensagem de erro
source mensagemErro.sh

#----------------{ Configuração de variáveis }-----------------------------#

VERSAO="Versão 1.1"

NOME_PROGRAMA="$(basename $0)"
DESCRICAO="Fazer backup de um arquivo ou de uma lista de arquivos em um arquivo zipado na pasta atual"
PARAMETROS="-h --help::Exibe esta mensagem de ajuda e sai
-v --version::Exibe a Versão do programa e sai
-a ::Faz backup de um arquivo fornecido pelo usuário
-l --list::Faz backup de uma lista de arquivos fornecida pelo usuário"
EXEMPLO_DE_USO="~$0 -a arquivo.txt 
~$ $0 -a arq1.txt arq2.txt arq3.txt # Mais de um arquivo pode ser informado
~$ $0 -l lista.txt #O arquivo lista deve conter endereços válidos de arquivos"

#--------------------------------------------------------------------------#

# Verificar se o usuário forneceu algum parâmetro
[ -z "$1" ] && {
	MENSAGEMERRO="Usuário não ofereceu parâmetros ao programa!\nDigite $(basename $0) -h para obter ajuda!"
	exibirMensagemErroProgramaFormatada "$(basename $0)" "1" "$MENSAGEMERRO"
}


case "$1" in
-h | --help) ## Exibir ajuda
	clear
	exibirMensagemAjudaProgramaFormatada "$NOME_PROGRAMA" "$DESCRICAO" "$PARAMETROS" "$EXEMPLO_DE_USO"
	exit 0
;;

-v | --version) ## Exibir versão
	echo "$VERSAO"
	exit 0
;;

-a) ## Compactar arquivo

	# O usuário forneceu um nome de arquivo?
	[ -z "$2" ] && {
	
		MENSAGEMERRO="O usuário não forneceu um nome de arquivo!"
		exibirMensagemErroProgramaFormatada "$(basename $0)" "2" "$MENSAGEMERRO"
	}
	
	# O usuário pode informar mais de um arquivo
	while [ "$2" ]
	do
		# Verificar se o arquivo existe
		[ -f "$2" -o -d "$2" ] || {
			MENSAGEMERRO="Arquivo ou diretório $2 não encontrado!"
			exibirMensagemErroProgramaFormatada "$(basename $0)" "3" "$MENSAGEMERRO"
		}

		compactado="$2.$(date +%d-%m-%Y.%H-%M-%S).tar.zip"
		echo "$PWD/$compactado"
		tar -zcf "$compactado" "$2"
		[ "$PWD/$compactado" = "$PWD/$2" ] && mv "$compactado" "$PWD"
		echo "Arquivo $2 compactado com sucesso!"
		shift
	done
	exit 0
;;

-l | --list) # O usuário pode fornecer uma lista de arquivos
	     # Em arquivo .txt, cada linha um enddereço

	     # Verificar se o usuário forneceu o nome do arquivo
	     [ -z "$2" ] && {
		MENSAGEMERRO="O usuário não forneceu um nome de arquivo!"
		exibirMensagemErroProgramaFormatada "$(basename $0)" "2" "$MENSAGEMERRO"
	     }

	     while read linha
	     do
	     
		 # Verificar se o arquivo existe
	     	[ -f "$linha" -o -d "$linha" ] || {
			MENSAGEMERRO="Arquivo ou diretório $linha não encontrado!"
			exibirMensagemErroProgramaFormatada "$(basename $0)" "3" "$MENSAGEMERRO"
	     	}

		compactado="$linha.$(date +%d-%m-%Y.%H-%M-%S).tar"
		tar -zcf "$compactado" "$linha"
		[ "$PWD/$compatado" = "$PWD/$linha" ] &&  mv "$compactado" "$PWD"
	     	echo "Arquivo $linha compactado com sucesso!"
	     	shift

	     done < $2


;;

*)
	MENSAGEMERRO="ERRO: Opção $1 desconhecida!\nDigite $0 -h para obter ajuda"
	exibirMensagemErroProgramaFormatada "$(basename $0)" "4" "$MENSAGEMERRO"
;;
esac

