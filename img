#!/bin/bash
#
# img (Shell Script)
#
# Objetivo: Converter arquivos .vpl 
# (imagens do pacote de processamento sísmico MADAGASCAR)
# em imagens .jpeg
# 
# Site: http://www.dirackslouge.online
#
# Versão 2.0
#
# Programador: Rodolfo A. C. Neves 13/01/2019
# 
# email: rodolfo_profissional@hotmail.com
# 
# Licença: Software de uso livre e código aberto.

#----------------{ Configuração de variáveis }-----------------------------#

# Versão deste programa
VERSAO="Versão 2.0"

#--------------------------------------------------------------------------#

MENSAGEM_USO="
$(basename $0) [-h | -v | -i | -r ]
-h --help Exibe esta mensagem de ajuda e sai
-v --version Exibe a Versão do programa e sai
-i Converte os arquivos .vpl de uma pasta em imagens jpeg
-r Remove os arquivos .jpeg de uma pasta

Exemplo de uso: 
	bash$ $0 -i # Converte arquivos .vpl da pasta atual
	bash$ $0 -i /home/user # Converte arquivos .vpl da pasta /home/user
	bash$ $0 -r # Remove os arquivos .jpeg da pasta atual
	bash$ $0 -r /home/user # Remove os arquivos .jpeg da pasta /home/user
"
# Verificar se o usuário forneceu algum parâmetro
[ -z "$1" ] && {
	echo "O usuário não forneceu nenhum parâmetro!" 
	echo "Digite $0 -h para obter ajuda!" 
	exit 1 
}

case "$1" in
-h | --help) ## Exibir ajuda
	echo -e "$MENSAGEM_USO"
	exit 0
;;

-v | --version) ## Exibir versão
	echo "$VERSAO"
	exit 0
;;

-i) ## Converter arquivos .vpl (MADAGASCAR) em imagens jpeg

	# Se o usuário não forneceu uma pasta, converta
	# arquivos .vpl da pasta atual
	if [ -z "$2" ]
	then
		# Armazene os arquivos da pasta atual em um arquivo
		# temporário
		ls -1 *.vpl > /tmp/lista.txt

		# Obtenha a imagem jpeg a partir dos arquivos em ARQ
		while read linha
		do
			< "$linha" jpegpen bgcolor=w > "$linha.jpeg"
		
		done < /tmp/lista.txt

		exit 0

	# O usuário forneceu o endereço de uma pasta específica,
	# converta os arquivos .vpl desta pasta
	else

		# Verifique se o endereço fornecido existe
		[ -d "$2" ] || {

			echo "Diretório $2 não encontrado"
			exit 4		
		}

		# Armazene os arquivos da pasta atual em um arquivo
		# temporário
		ls -1 $2 | grep ".vpl$" > /tmp/lista.txt

		# Obtenha a imagem jpeg a partir dos arquivos em ARQ
		while read linha
		do
	
			# Verifique se o arquivo existe antes de converter
			[ -f "$2${linha}" ] || {

				echo "Arquivo $2${linha} não encontrado"
				exit 5	
			}
			
			# Converter de .vpl para jpeg
			< "$2${linha}" jpegpen bgcolor=w > "$2${linha}.jpeg"
		
		done < /tmp/lista.txt

		exit 0
	fi
;;

-r) ## Remover arquivos jpeg de uma pasta
	
	# Se o usuário não forneceu uma pasta, apague
	# arquivos .jpeg da pasta atual
	if [ -z "$2" ]
	then
		# Remover arquivos?
		echo "Pasta atual: $PWD"
		read -p "Remover arquivos .jpeg da pasta atual? (y/n)" RESP

		# Usuário desistiu?
		if [ "$RESP" = "n" ]
		then
			echo "Remoção abortada! Nenhum arquivo removido"
			exit 0
			
		elif [ "$RESP" = "y" ]
		then
			rm *.jpeg
			echo "Arquivos .jpeg removidos com sucesso!"
			exit 0

		else
			echo "Opção $RESP desconhecida! Abortada a execução"
			exit 6
		fi

	# O usuário forneceu o endereço de uma pasta específica,
	# apague os arquivos .jpeg desta pasta
	else

		# Verifique se o endereço fornecido existe
		[ -d "$2" ] || {

			echo "Diretório $2 não encontrado"
			exit 4		
		}

		# Remover arquivos?
		echo "Pasta escolhida: $2"
		read -p "Remover arquivos .jpeg da pasta? (y/n)" RESP

		# Usuário desistiu?
		if [ "$RESP" = "n" ]
		then
			echo "Remoção abortada! Nenhum arquivo removido de $2"
			exit 0
			
		elif [ "$RESP" = "y" ]
		then

			# Verifique se há algum .jpeg na pasta para ser removido
			rm "$2"*.jpeg && {
				echo "Arquivos .jpeg removidos de $2 com sucesso!"
			} || {
				echo "Arquivos .jpeg não foram encontrados em $2"
			}
			exit 0

		else
			echo "Opção $RESP desconhecida! Abortada a execução"
			exit 6
		fi

		
	fi
	
;;

*) ## Usuário forneceu parâmetro desconhecido
	echo -e "\033[31mERRO: Opção $1 desconhecida!\033[m"
	echo "\033[31mDigite $0 -h para obter ajuda\033[m"
	exit 3
;;
esac
