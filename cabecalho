#!/bin/bash
#
# cabecalho 
#
# Objetivo: Gerar o cabeçalho para um arquivo de programa de uma
# determinada linguagem de programação com objetivo, nome do programa,
# programador e etc.
#
# Site: http://www.dirackslounge.online
#
# Versão 2.0
#
# Programador: Rodolfo A. C. Neves 27/12/2018
#
# email: rodolfo_profissional@hotmail.com
#
# Funcionamento: cabecalho -op NomeDoArquivo.sh (cria o arquivo já com um cabeçalho padronizado)
#		** -Op pode assumir os seguintes valores
#			-sh (shell script)
#			-sci (scilab)
#			-c (linguagem C)
#			-c++ (linguagem C++)
#
# Exemplo de uso: cabecalho -sh arquivo.sh (Gera o arquivo.sh com o cabeçalho padronizado)
#
# Licença: software de uso livre e código aberto.

# Biblioteca de funções para formatar a mensagem de ajuda
source mensagemAjuda.sh 

# Biblioteca de funções para formatar a mensagem de erro
source mensagemErro.sh

## Verificar se o usuário forneceu $1 e $2
if [ -z "$1" ]
then
	MENSAGEMERRO="Usuário não ofereceu parâmetros ao programa!\nDigite $(basename $0) -h para obter ajuda!"
	exibirMensagemErroProgramaFormatada "$(basename $0)" "1" "$MENSAGEMERRO"
fi

# Versão deste programa
VERSAO="Versão 2.0"

# Armazena variáveis template para exibir no cabeçalho
CONFIG="./.config/cabecalho.config.txt"

## Variáveis que armazenam mensagem de ajuda do programa
NOME_PROGRAMA="$(basename $0)"
DESCRICAO="Gerar o cabeçalho para um arquivo de programa de uma determinada linguagem de programação com objetivo, nome do programa, programador e etc."
PARAMETROS="-h --help::Exibe essa tela de ajuda e sai
-v --version::Exibe a versão do programa e sai
--config :: Configurar variáveis template para o cabeçalho
--list :: Lista todas as variáveis configuradas
-sh ::Cabeçalho para um programa em shell script
-sci ::Cabeçalho para um programa do scilab
-c ::Cabeçalho para um programa em C
-c++ ::Cabeçalho para um programa em C++"
EXEMPLO_DE_USO="~$ $(basename $0) -sh Arquivo.sh # Cabeçalho para Arquivo.sh
\t~$ $(basename $0) --config user.programador=dirack # Configurar o nome do programador no cabeçalho"

#set -xv

case "$1" in
	-h | --help) ## Exibe a ajuda
		clear
		exibirMensagemAjudaProgramaFormatada "$NOME_PROGRAMA" "$DESCRICAO" "$PARAMETROS" "$EXEMPLO_DE_USO"
		exit 0
	;;

	-v | --version) ## Exibe a versão do programa
		echo $VERSAO
		exit 0
	;;

	--list) ## Listar variáveis em .config/cabecalho.config.txt

		if [ -f "$CONFIG" ]
		then
			sed -n '/^#/!p' "$CONFIG"
		else
			touch "$CONFIG"
		fi

		exit 0

	;;

	--config) ## Configurar variáveis de template do cabeçalho

		## Usuário passou parâmetro para --config?
		[ -z "$2" ] && {

			MENSAGEMERRO="--config precisa de mais parâmetros!\nDigite $(basename $0) -h para obter ajuda!"
			exibirMensagemErroProgramaFormatada "$(basename $0)" "2" "$MENSAGEMERRO"
		}

		VARIAVEL_FORNECIDA="$2"

		if [ -f "$CONFIG" ]
		then
			echo "$VARIAVEL_FORNECIDA" >> "$CONFIG"
		else
			touch "$CONFIG"
			echo "$2" >> "$CONFIG"
		fi
	;;
esac

# Usuário forneceu um nome para o arquivo a ser criado?
[ -z "$2" ] && {
	MENSAGEMERRO="Usuário não ofereceu o nome do arquivo!\nDigite $(basename $0) -h para obter ajuda"
	exibirMensagemErroProgramaFormatada "$(basename $0)" "3" "$MENSAGEMERRO"
}

# Arquivo que será criado
ARQUIVO_CRIADO="$2"

# Verificar se o usuário forneceu o nome 
# de um arquivo que já existe.
# Se sim, faça uma cópia. 
# $control é uma chave para informar
# ao programa que o arquivo existe
if [ -f "$2" ] 
then
	echo "O arquivo existe! Fazendo uma cópia..."
	control="1"
	file="$2"
	mv "$2" "$2.bak" #cópia .bak
else
	file="$2"
fi

# Verificar se há um template de cabeçalho
# definido em .config/cabecalho.config.txt
[ -f "$CONFIG" ] && {

	TMP=$(sed '/^#/!p' "$CONFIG")
	PROGRAMADOR=$(echo "$TMP" | grep "user.programador" | cut -d"=" -f2)
	SITE=$(echo "$TMP" | grep "user.site" | cut -d"=" -f2)
	EMAIL=$(echo "$TMP" | grep "user.email" | cut -d"=" -f2)
	LICENSA=$(echo "$TMP" | grep "user.licensa" | cut -d"=" -f2)

}

## variável que armazena o cabeçalho padronizado
HEAD="Interpretador\n\n$ARQUIVO_CRIADO\n\nObjetivo:\n\nSite:$SITE\n\nVersão 1.0\n\n\
Programador: $PROGRAMADOR $(date +%d/%m/%Y)\n\nEmail:$EMAIL\n\nLicença: $LICENSA."

case "$1" in
	-sh)	## cabeçalho para shell script
		echo -e "$HEAD" | sed 's/Interpretador/!\/bin\/bash/;s/^/# /g' >> "$file"
		;;

	-sci) ## cabeçalho para script do scilab
		echo -e "$HEAD" | sed '1,2d;s/^/\/\/ /g;' >> "$file"
		echo -e "clc\nclear\nclose" >> "$file"
		;;
		
	-c | -c++) ## cabeçalho para C e C++
		echo -e "/*" >> "$file"
		echo -e "$HEAD" | sed 's/^/* /g;' >> "$file"
		echo -e "*/" >> "$file"
		;;

	*)
		MENSAGEMERRO="Opção $1 Desconhecida!\nDigite $(basename $0) -h para obter ajuda"
		exibirMensagemErroProgramaFormatada "$(basename $0)" "4" "$MENSAGEMERRO"
esac

# Se o arquivo existe
# Copie o resto do arquivo
# para o cabeçalho
if [ "$control" = "1" ] 
then
	echo -e "\n" >> "$file"
	cat "$file.bak" >> "$file"
fi

exit 0
